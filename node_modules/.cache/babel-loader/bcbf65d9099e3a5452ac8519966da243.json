{"ast":null,"code":"var _jsxFileName = \"/Users/sarahholland/Documents/Nology/Projects/client-project/_nsight/src/pages/students/students.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport \"./students.scss\";\nimport Searchbox from \"../../components/searchbox/searchbox\";\nimport Sort from \"../../components/sort/sort\";\nimport StudentList from \"../../components/studentList/studentList\";\nimport studentsData from \"../../assets/data/student-data\";\nimport Filter from \"../../components/filter/filter\";\nimport chevronLeft from \"../../assets/icons/chevron-left.svg\";\nimport chevronRight from \"../../assets/icons/chevron-right.svg\";\nimport downArrow from \"../../assets/icons/down-arrow.svg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Students = () => {\n  _s();\n\n  const [students, setStudents] = useState([]);\n  const [pagination, setPagination] = useState(false);\n  const [perPage, setPerPage] = useState(10);\n  const [pageStart, setPageStart] = useState(0);\n  const [pageEnd, setPageEnd] = useState(perPage);\n  const [showResults, setShowResults] = useState(false);\n  const [studentResults, setStudentResults] = use;\n\n  const unique = (value, index, self) => {\n    return self.indexOf(value) === index;\n  };\n\n  const courseNames = studentsData.map(student => student.course_name);\n  const uniqueCourseNames = courseNames.filter(unique);\n\n  const createStatefulObject = courseNames => {\n    return courseNames.reduce((statefulObject, courseName) => {\n      statefulObject[courseName] = false;\n      return statefulObject;\n    }, {});\n  };\n\n  const [courses, setCourses] = useState(createStatefulObject(uniqueCourseNames));\n\n  const handleSetCourses = courseName => {\n    const tempCourses = { ...courses\n    };\n    tempCourses[courseName] = !tempCourses[courseName];\n    setCourses(tempCourses); // not synchronous\n\n    return tempCourses;\n  };\n\n  console.log(courses); // Search by first and last name\n\n  const handleSearch = e => {\n    const sanitiseInput = e.target.value.toLowerCase();\n    const studentSearch = studentsData.filter(student => {\n      const sanitisedStudentFirstName = student.first_name.toLowerCase();\n      const sanitisedStudentLastName = student.last_name.toLowerCase();\n      const sanitisedStudentName = `${sanitisedStudentFirstName} ${sanitisedStudentLastName}`;\n      return sanitisedStudentName.includes(sanitiseInput);\n    });\n    const toShow = studentSearch.slice(pageStart, pageEnd);\n    setStudents(toShow);\n    setShowResults(true);\n\n    if (e.target.value.length === 0) {\n      setShowResults(false);\n      const toShow = studentsData.slice(pageStart, pageEnd);\n      setStudents(toShow);\n    }\n  }; // Sort by first and last name\n  // SORTING ONLY SORTS THE PAGE VISIBLE AS RELIES ON STUDENTS STATE\n\n\n  const sortAscendingAZ = (a, b) => {\n    if (a.first_name < b.first_name) {\n      return -1;\n    } else if (a.first_name > b.first_name) {\n      return 1;\n    } else {\n      return 0;\n    }\n  };\n\n  const sortAscendingByFirstName = () => {\n    const studentsSortedByName = students.filter(student => student).sort(sortAscendingAZ);\n    setStudents(studentsSortedByName);\n  };\n\n  const sortDescendingAZ = (a, b) => {\n    if (b.first_name < a.first_name) {\n      return -1;\n    } else if (b.first_name > a.first_name) {\n      return 1;\n    } else {\n      return 0;\n    }\n  };\n\n  const sortDescendingByFirstName = () => {\n    const studentsSortedByName = students.filter(student => student).sort(sortDescendingAZ);\n    setStudents(studentsSortedByName);\n  };\n\n  const filterByCourseName = e => {\n    const courses = handleSetCourses(e.target.value);\n    const stateArray = [];\n    Object.keys(courses).filter(key => {\n      if (courses[key]) {\n        stateArray.push(key);\n      }\n    });\n    const filteredCourseName = studentsData.filter(student => stateArray.includes(student.course_name));\n\n    if (filteredCourseName.length === 0) {\n      getStudents(studentsData);\n    } else {\n      const filtered = filteredCourseName.slice(pageStart, pageEnd);\n      setStudents(filtered);\n    }\n\n    const filteredStateArray = stateArray.filter(courseName => courseName.includes(true));\n\n    if (filteredStateArray) {\n      setShowResults(true);\n    } else {\n      setShowResults(false);\n    }\n  };\n\n  const displayPage = (pageStart, pageEnd) => {\n    const toShow = studentsData.slice(pageStart, pageEnd);\n    setStudents(toShow);\n  };\n\n  const nextPage = () => {\n    const newPageStart = pageStart + perPage;\n    const newPageEnd = pageEnd + perPage;\n\n    if (newPageStart < studentsData.length) {\n      setPageStart(newPageStart);\n    }\n\n    if (newPageEnd > studentsData.length) {\n      setPageEnd(studentsData.length);\n    } else {\n      setPageEnd(newPageEnd);\n    }\n\n    if (newPageStart < studentsData.length) {\n      displayPage(newPageStart, newPageEnd);\n    }\n  };\n\n  const previousPage = () => {\n    const newPageStart = pageStart - perPage;\n    let newPageEnd = pageEnd - perPage;\n\n    if (newPageStart >= 0) {\n      setPageStart(newPageStart);\n    }\n\n    if (newPageEnd % perPage != 0) {\n      setPageEnd(pageEnd - newPageEnd % perPage);\n      newPageEnd = pageEnd - newPageEnd % perPage;\n    } else {\n      if (newPageEnd > 0) {\n        setPageEnd(newPageEnd);\n      }\n    }\n\n    if (newPageStart >= 0) {\n      displayPage(newPageStart, newPageEnd);\n\n      if (pageEnd < perPage) {\n        displayPage(newPageStart, perPage);\n      } else {\n        displayPage(newPageStart, newPageEnd);\n      }\n    }\n  }; // Pagination\n\n\n  const togglePagination = () => {\n    setPagination(!pagination);\n  };\n\n  const togglePerPage = e => {\n    setPerPage(e.target.value);\n    setPageStart(0);\n    setPageEnd(e.target.value);\n    displayPage(0, e.target.value);\n    togglePagination();\n  };\n\n  const getStudents = () => {\n    const toShow = studentsData.slice(pageStart, pageEnd);\n    setStudents(toShow);\n  };\n\n  useEffect(() => {\n    getStudents();\n  }, []);\n  let length = 0;\n\n  if (students.length > perPage) {\n    length = perPage;\n  } else {\n    length = students.length;\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"student-list\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"list-title\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"list-title__heading\",\n        children: \"Student List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Searchbox, {\n        handleSearch: handleSearch\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Sort, {\n        sortAscendingByFirstName: sortAscendingByFirstName,\n        sortDescendingByFirstName: sortDescendingByFirstName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Filter, {\n        courses: courses,\n        filterByCourseName: filterByCourseName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(StudentList, {\n      studentData: students\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pagination\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Rows per page\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        onClick: togglePagination,\n        children: [perPage, \" \", /*#__PURE__*/_jsxDEV(\"img\", {\n          src: downArrow,\n          alt: \"down arrow\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 57\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 17\n      }, this), pagination && /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          onClick: togglePerPage,\n          value: \"5\",\n          children: \"5\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          onClick: togglePerPage,\n          value: \"10\",\n          children: \"10\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          onClick: togglePerPage,\n          value: \"15\",\n          children: \"15\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          onClick: togglePerPage,\n          value: \"20\",\n          children: \"20\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          onClick: togglePerPage,\n          value: \"25\",\n          children: \"25\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          onClick: togglePerPage,\n          value: \"30\",\n          children: \"30\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [!showResults && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [pageStart + 1, \"-\", pageEnd, \" of \", studentsData.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 34\n      }, this), showResults && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Showing results: \", length, \" of \", students.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 33\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: chevronLeft,\n      alt: \"previous page\",\n      onClick: previousPage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: chevronRight,\n      alt: \"next page\",\n      onClick: nextPage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 204,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Students, \"rI4im0VvCIHhUCtvwYj9zhXNURU=\");\n\n_c = Students;\nexport default Students;\n\nvar _c;\n\n$RefreshReg$(_c, \"Students\");","map":{"version":3,"sources":["/Users/sarahholland/Documents/Nology/Projects/client-project/_nsight/src/pages/students/students.jsx"],"names":["React","useState","useEffect","Searchbox","Sort","StudentList","studentsData","Filter","Students","students","setStudents","pagination","setPagination","perPage","setPerPage","pageStart","setPageStart","pageEnd","setPageEnd","showResults","setShowResults","studentResults","setStudentResults","use","unique","value","index","self","indexOf","courseNames","map","student","course_name","uniqueCourseNames","filter","createStatefulObject","reduce","statefulObject","courseName","courses","setCourses","handleSetCourses","tempCourses","console","log","handleSearch","e","sanitiseInput","target","toLowerCase","studentSearch","sanitisedStudentFirstName","first_name","sanitisedStudentLastName","last_name","sanitisedStudentName","includes","toShow","slice","length","sortAscendingAZ","a","b","sortAscendingByFirstName","studentsSortedByName","sort","sortDescendingAZ","sortDescendingByFirstName","filterByCourseName","stateArray","Object","keys","key","push","filteredCourseName","getStudents","filtered","filteredStateArray","displayPage","nextPage","newPageStart","newPageEnd","previousPage","togglePagination","togglePerPage","downArrow","chevronLeft","chevronRight"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAO,iBAAP;AACA,OAAOC,SAAP,MAAsB,sCAAtB;AACA,OAAOC,IAAP,MAAiB,4BAAjB;AACA,OAAOC,WAAP,MAAwB,0CAAxB;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AACA,OAAOC,MAAP,MAAmB,gCAAnB;;;;;;AAKA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AACnB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BT,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACU,UAAD,EAAaC,aAAb,IAA8BX,QAAQ,CAAC,KAAD,CAA5C;AACA,QAAM,CAACY,OAAD,EAAUC,UAAV,IAAwBb,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACc,SAAD,EAAYC,YAAZ,IAA4Bf,QAAQ,CAAC,CAAD,CAA1C;AACA,QAAM,CAACgB,OAAD,EAAUC,UAAV,IAAwBjB,QAAQ,CAACY,OAAD,CAAtC;AACA,QAAM,CAACM,WAAD,EAAcC,cAAd,IAAgCnB,QAAQ,CAAC,KAAD,CAA9C;AACA,QAAM,CAACoB,cAAD,EAAiBC,iBAAjB,IAAsCC,GAA5C;;AAEA,QAAMC,MAAM,GAAG,CAACC,KAAD,EAAQC,KAAR,EAAeC,IAAf,KAAwB;AACnC,WAAOA,IAAI,CAACC,OAAL,CAAaH,KAAb,MAAwBC,KAA/B;AACH,GAFD;;AAIA,QAAMG,WAAW,GAAGvB,YAAY,CAACwB,GAAb,CAAiBC,OAAO,IAAIA,OAAO,CAACC,WAApC,CAApB;AAEA,QAAMC,iBAAiB,GAAGJ,WAAW,CAACK,MAAZ,CAAmBV,MAAnB,CAA1B;;AAEA,QAAMW,oBAAoB,GAAIN,WAAD,IAAiB;AAC1C,WAAOA,WAAW,CAACO,MAAZ,CAAmB,CAACC,cAAD,EAAiBC,UAAjB,KAAgC;AACtDD,MAAAA,cAAc,CAACC,UAAD,CAAd,GAA6B,KAA7B;AACA,aAAOD,cAAP;AACH,KAHM,EAGJ,EAHI,CAAP;AAIH,GALD;;AAOA,QAAM,CAACE,OAAD,EAAUC,UAAV,IAAwBvC,QAAQ,CAACkC,oBAAoB,CAACF,iBAAD,CAArB,CAAtC;;AAEA,QAAMQ,gBAAgB,GAAIH,UAAD,IAAgB;AACrC,UAAMI,WAAW,GAAG,EAAC,GAAGH;AAAJ,KAApB;AACAG,IAAAA,WAAW,CAACJ,UAAD,CAAX,GAA0B,CAACI,WAAW,CAACJ,UAAD,CAAtC;AAEAE,IAAAA,UAAU,CAACE,WAAD,CAAV,CAJqC,CAIZ;;AACzB,WAAOA,WAAP;AACH,GAND;;AAOAC,EAAAA,OAAO,CAACC,GAAR,CAAYL,OAAZ,EAjCmB,CAmCnB;;AACA,QAAMM,YAAY,GAAIC,CAAD,IAAO;AACxB,UAAMC,aAAa,GAAGD,CAAC,CAACE,MAAF,CAASvB,KAAT,CAAewB,WAAf,EAAtB;AACA,UAAMC,aAAa,GAAG5C,YAAY,CAAC4B,MAAb,CAAoBH,OAAO,IAAI;AACjD,YAAMoB,yBAAyB,GAAGpB,OAAO,CAACqB,UAAR,CAAmBH,WAAnB,EAAlC;AACA,YAAMI,wBAAwB,GAAGtB,OAAO,CAACuB,SAAR,CAAkBL,WAAlB,EAAjC;AACA,YAAMM,oBAAoB,GAAI,GAAEJ,yBAA0B,IAAGE,wBAAyB,EAAtF;AACA,aAAOE,oBAAoB,CAACC,QAArB,CAA8BT,aAA9B,CAAP;AACH,KALqB,CAAtB;AAMA,UAAMU,MAAM,GAAGP,aAAa,CAACQ,KAAd,CAAoB3C,SAApB,EAA+BE,OAA/B,CAAf;AACAP,IAAAA,WAAW,CAAC+C,MAAD,CAAX;AAEArC,IAAAA,cAAc,CAAC,IAAD,CAAd;;AACA,QAAI0B,CAAC,CAACE,MAAF,CAASvB,KAAT,CAAekC,MAAf,KAA0B,CAA9B,EAAiC;AAC7BvC,MAAAA,cAAc,CAAC,KAAD,CAAd;AACA,YAAMqC,MAAM,GAAGnD,YAAY,CAACoD,KAAb,CAAmB3C,SAAnB,EAA8BE,OAA9B,CAAf;AACAP,MAAAA,WAAW,CAAC+C,MAAD,CAAX;AACH;AACJ,GAjBD,CApCmB,CAuDnB;AACA;;;AACA,QAAMG,eAAe,GAAG,CAACC,CAAD,EAAIC,CAAJ,KAAU;AAC9B,QAAID,CAAC,CAACT,UAAF,GAAeU,CAAC,CAACV,UAArB,EAAiC;AAC7B,aAAO,CAAC,CAAR;AACH,KAFD,MAEO,IAAIS,CAAC,CAACT,UAAF,GAAeU,CAAC,CAACV,UAArB,EAAiC;AACpC,aAAO,CAAP;AACH,KAFM,MAEA;AACH,aAAO,CAAP;AACH;AACJ,GARD;;AAUA,QAAMW,wBAAwB,GAAG,MAAM;AACnC,UAAMC,oBAAoB,GAAGvD,QAAQ,CAACyB,MAAT,CAAgBH,OAAO,IAAIA,OAA3B,EAAoCkC,IAApC,CAAyCL,eAAzC,CAA7B;AACAlD,IAAAA,WAAW,CAACsD,oBAAD,CAAX;AACH,GAHD;;AAKA,QAAME,gBAAgB,GAAG,CAACL,CAAD,EAAIC,CAAJ,KAAU;AAC/B,QAAIA,CAAC,CAACV,UAAF,GAAeS,CAAC,CAACT,UAArB,EAAiC;AAC7B,aAAO,CAAC,CAAR;AACH,KAFD,MAEO,IAAIU,CAAC,CAACV,UAAF,GAAeS,CAAC,CAACT,UAArB,EAAiC;AACpC,aAAO,CAAP;AACH,KAFM,MAEA;AACH,aAAO,CAAP;AACH;AACJ,GARD;;AAUA,QAAMe,yBAAyB,GAAG,MAAM;AACpC,UAAMH,oBAAoB,GAAGvD,QAAQ,CAACyB,MAAT,CAAgBH,OAAO,IAAIA,OAA3B,EAAoCkC,IAApC,CAAyCC,gBAAzC,CAA7B;AACAxD,IAAAA,WAAW,CAACsD,oBAAD,CAAX;AACH,GAHD;;AAKA,QAAMI,kBAAkB,GAAItB,CAAD,IAAO;AAC9B,UAAMP,OAAO,GAAGE,gBAAgB,CAACK,CAAC,CAACE,MAAF,CAASvB,KAAV,CAAhC;AACA,UAAM4C,UAAU,GAAG,EAAnB;AAEAC,IAAAA,MAAM,CAACC,IAAP,CAAYhC,OAAZ,EAAqBL,MAArB,CAA4BsC,GAAG,IAAI;AAC/B,UAAIjC,OAAO,CAACiC,GAAD,CAAX,EAAkB;AACdH,QAAAA,UAAU,CAACI,IAAX,CAAgBD,GAAhB;AACH;AACJ,KAJD;AAMA,UAAME,kBAAkB,GAAGpE,YAAY,CAAC4B,MAAb,CAAoBH,OAAO,IAAIsC,UAAU,CAACb,QAAX,CAAoBzB,OAAO,CAACC,WAA5B,CAA/B,CAA3B;;AAEA,QAAI0C,kBAAkB,CAACf,MAAnB,KAA8B,CAAlC,EAAqC;AACjCgB,MAAAA,WAAW,CAACrE,YAAD,CAAX;AACH,KAFD,MAEO;AACH,YAAMsE,QAAQ,GAAGF,kBAAkB,CAAChB,KAAnB,CAAyB3C,SAAzB,EAAoCE,OAApC,CAAjB;AACAP,MAAAA,WAAW,CAACkE,QAAD,CAAX;AACH;;AAED,UAAMC,kBAAkB,GAAGR,UAAU,CAACnC,MAAX,CAAkBI,UAAU,IAAIA,UAAU,CAACkB,QAAX,CAAoB,IAApB,CAAhC,CAA3B;;AAEA,QAAIqB,kBAAJ,EAAwB;AACpBzD,MAAAA,cAAc,CAAC,IAAD,CAAd;AACH,KAFD,MAEO;AACHA,MAAAA,cAAc,CAAC,KAAD,CAAd;AACH;AAEJ,GA3BD;;AA6BA,QAAM0D,WAAW,GAAG,CAAC/D,SAAD,EAAYE,OAAZ,KAAwB;AACxC,UAAMwC,MAAM,GAAGnD,YAAY,CAACoD,KAAb,CAAmB3C,SAAnB,EAA8BE,OAA9B,CAAf;AACAP,IAAAA,WAAW,CAAC+C,MAAD,CAAX;AACH,GAHD;;AAKA,QAAMsB,QAAQ,GAAG,MAAM;AACnB,UAAMC,YAAY,GAAGjE,SAAS,GAAGF,OAAjC;AACA,UAAMoE,UAAU,GAAGhE,OAAO,GAAGJ,OAA7B;;AACA,QAAImE,YAAY,GAAG1E,YAAY,CAACqD,MAAhC,EAAwC;AACpC3C,MAAAA,YAAY,CAACgE,YAAD,CAAZ;AACH;;AACD,QAAIC,UAAU,GAAG3E,YAAY,CAACqD,MAA9B,EAAsC;AAClCzC,MAAAA,UAAU,CAACZ,YAAY,CAACqD,MAAd,CAAV;AACH,KAFD,MAEO;AACHzC,MAAAA,UAAU,CAAC+D,UAAD,CAAV;AACH;;AACD,QAAID,YAAY,GAAG1E,YAAY,CAACqD,MAAhC,EAAwC;AACpCmB,MAAAA,WAAW,CAACE,YAAD,EAAeC,UAAf,CAAX;AACH;AACJ,GAdD;;AAgBA,QAAMC,YAAY,GAAG,MAAM;AACvB,UAAMF,YAAY,GAAGjE,SAAS,GAAGF,OAAjC;AACA,QAAIoE,UAAU,GAAGhE,OAAO,GAAGJ,OAA3B;;AACA,QAAImE,YAAY,IAAI,CAApB,EAAuB;AACnBhE,MAAAA,YAAY,CAACgE,YAAD,CAAZ;AACH;;AACD,QAAIC,UAAU,GAAGpE,OAAb,IAAwB,CAA5B,EAA+B;AAC3BK,MAAAA,UAAU,CAACD,OAAO,GAAIgE,UAAU,GAAGpE,OAAzB,CAAV;AACAoE,MAAAA,UAAU,GAAGhE,OAAO,GAAIgE,UAAU,GAAGpE,OAArC;AACH,KAHD,MAGO;AACH,UAAIoE,UAAU,GAAG,CAAjB,EAAoB;AAChB/D,QAAAA,UAAU,CAAC+D,UAAD,CAAV;AACH;AACJ;;AACD,QAAID,YAAY,IAAI,CAApB,EAAuB;AACnBF,MAAAA,WAAW,CAACE,YAAD,EAAeC,UAAf,CAAX;;AACA,UAAIhE,OAAO,GAAGJ,OAAd,EAAuB;AACnBiE,QAAAA,WAAW,CAACE,YAAD,EAAenE,OAAf,CAAX;AACH,OAFD,MAEO;AACHiE,QAAAA,WAAW,CAACE,YAAD,EAAeC,UAAf,CAAX;AACH;AACJ;AACJ,GAtBD,CAzImB,CAiKnB;;;AACA,QAAME,gBAAgB,GAAG,MAAM;AAC3BvE,IAAAA,aAAa,CAAC,CAACD,UAAF,CAAb;AACH,GAFD;;AAIA,QAAMyE,aAAa,GAAItC,CAAD,IAAO;AACzBhC,IAAAA,UAAU,CAACgC,CAAC,CAACE,MAAF,CAASvB,KAAV,CAAV;AACAT,IAAAA,YAAY,CAAC,CAAD,CAAZ;AACAE,IAAAA,UAAU,CAAC4B,CAAC,CAACE,MAAF,CAASvB,KAAV,CAAV;AACAqD,IAAAA,WAAW,CAAC,CAAD,EAAIhC,CAAC,CAACE,MAAF,CAASvB,KAAb,CAAX;AACA0D,IAAAA,gBAAgB;AACnB,GAND;;AAQA,QAAMR,WAAW,GAAG,MAAM;AACtB,UAAMlB,MAAM,GAAGnD,YAAY,CAACoD,KAAb,CAAmB3C,SAAnB,EAA8BE,OAA9B,CAAf;AACAP,IAAAA,WAAW,CAAC+C,MAAD,CAAX;AACH,GAHD;;AAKAvD,EAAAA,SAAS,CAAC,MAAM;AACZyE,IAAAA,WAAW;AACd,GAFQ,EAEN,EAFM,CAAT;AAIA,MAAIhB,MAAM,GAAG,CAAb;;AACA,MAAIlD,QAAQ,CAACkD,MAAT,GAAkB9C,OAAtB,EAA+B;AAC3B8C,IAAAA,MAAM,GAAG9C,OAAT;AACH,GAFD,MAEO;AACH8C,IAAAA,MAAM,GAAGlD,QAAQ,CAACkD,MAAlB;AACH;;AAGD,sBACI;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,8BACI;AAAI,QAAA,SAAS,EAAC,qBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,SAAD;AAAW,QAAA,YAAY,EAAEd;AAAzB;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI,QAAC,IAAD;AAAM,QAAA,wBAAwB,EAAEkB,wBAAhC;AAA0D,QAAA,yBAAyB,EAAEI;AAArF;AAAA;AAAA;AAAA;AAAA,cAHJ,eAII,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAE5B,OAAjB;AAA0B,QAAA,kBAAkB,EAAE6B;AAA9C;AAAA;AAAA;AAAA;AAAA,cAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAOI,QAAC,WAAD;AAAa,MAAA,WAAW,EAAE3D;AAA1B;AAAA;AAAA;AAAA;AAAA,YAPJ,eAQI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAG,QAAA,OAAO,EAAE0E,gBAAZ;AAAA,mBAA+BtE,OAA/B,oBAAwC;AAAK,UAAA,GAAG,EAAEwE,SAAV;AAAqB,UAAA,GAAG,EAAC;AAAzB;AAAA;AAAA;AAAA;AAAA,gBAAxC;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,EAGK1E,UAAU,iBACP;AAAA,gCACA;AAAI,UAAA,OAAO,EAAEyE,aAAb;AAA4B,UAAA,KAAK,EAAC,GAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADA,eAEA;AAAI,UAAA,OAAO,EAAEA,aAAb;AAA4B,UAAA,KAAK,EAAC,IAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFA,eAGA;AAAI,UAAA,OAAO,EAAEA,aAAb;AAA4B,UAAA,KAAK,EAAC,IAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHA,eAIA;AAAI,UAAA,OAAO,EAAEA,aAAb;AAA4B,UAAA,KAAK,EAAC,IAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJA,eAKA;AAAI,UAAA,OAAO,EAAEA,aAAb;AAA4B,UAAA,KAAK,EAAC,IAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBALA,eAMA;AAAI,UAAA,OAAO,EAAEA,aAAb;AAA4B,UAAA,KAAK,EAAC,IAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBANA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJR;AAAA;AAAA;AAAA;AAAA;AAAA,YARJ,eAsBI;AAAA,iBACK,CAACjE,WAAD,iBAAgB;AAAA,mBAAIJ,SAAS,GAAC,CAAd,OAAkBE,OAAlB,UAA+BX,YAAY,CAACqD,MAA5C;AAAA;AAAA;AAAA;AAAA;AAAA,cADrB,EAGKxC,WAAW,iBAAI;AAAA,wCAAqBwC,MAArB,UAAiClD,QAAQ,CAACkD,MAA1C;AAAA;AAAA;AAAA;AAAA;AAAA,cAHpB;AAAA;AAAA;AAAA;AAAA;AAAA,YAtBJ,eA2BI;AAAK,MAAA,GAAG,EAAE2B,WAAV;AAAuB,MAAA,GAAG,EAAC,eAA3B;AAA2C,MAAA,OAAO,EAAEJ;AAApD;AAAA;AAAA;AAAA;AAAA,YA3BJ,eA4BI;AAAK,MAAA,GAAG,EAAEK,YAAV;AAAwB,MAAA,GAAG,EAAC,WAA5B;AAAwC,MAAA,OAAO,EAAER;AAAjD;AAAA;AAAA;AAAA;AAAA,YA5BJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAgCH,CA/ND;;GAAMvE,Q;;KAAAA,Q;AAiON,eAAeA,QAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./students.scss\";\nimport Searchbox from \"../../components/searchbox/searchbox\";\nimport Sort from \"../../components/sort/sort\";\nimport StudentList from \"../../components/studentList/studentList\";\nimport studentsData from \"../../assets/data/student-data\";\nimport Filter from \"../../components/filter/filter\";\nimport chevronLeft from \"../../assets/icons/chevron-left.svg\";\nimport chevronRight from \"../../assets/icons/chevron-right.svg\";\nimport downArrow from \"../../assets/icons/down-arrow.svg\";\n\nconst Students = () => {\n    const [students, setStudents] = useState([]);\n    const [pagination, setPagination] = useState(false);\n    const [perPage, setPerPage] = useState(10);\n    const [pageStart, setPageStart] = useState(0);\n    const [pageEnd, setPageEnd] = useState(perPage);\n    const [showResults, setShowResults] = useState(false);\n    const [studentResults, setStudentResults] = use\n\n    const unique = (value, index, self) => {\n        return self.indexOf(value) === index\n    }\n\n    const courseNames = studentsData.map(student => student.course_name);\n\n    const uniqueCourseNames = courseNames.filter(unique);\n    \n    const createStatefulObject = (courseNames) => {\n        return courseNames.reduce((statefulObject, courseName) => {\n            statefulObject[courseName] = false;\n            return statefulObject;\n        }, {})\n    }\n\n    const [courses, setCourses] = useState(createStatefulObject(uniqueCourseNames))\n\n    const handleSetCourses = (courseName) => {\n        const tempCourses = {...courses};\n        tempCourses[courseName] = !tempCourses[courseName];\n\n        setCourses(tempCourses); // not synchronous\n        return tempCourses;\n    }\n    console.log(courses)\n\n    // Search by first and last name\n    const handleSearch = (e) => {\n        const sanitiseInput = e.target.value.toLowerCase();\n        const studentSearch = studentsData.filter(student => {\n            const sanitisedStudentFirstName = student.first_name.toLowerCase();\n            const sanitisedStudentLastName = student.last_name.toLowerCase();\n            const sanitisedStudentName = `${sanitisedStudentFirstName} ${sanitisedStudentLastName}`;\n            return sanitisedStudentName.includes(sanitiseInput);\n        })\n        const toShow = studentSearch.slice(pageStart, pageEnd);\n        setStudents(toShow);\n\n        setShowResults(true)\n        if (e.target.value.length === 0) {\n            setShowResults(false)\n            const toShow = studentsData.slice(pageStart, pageEnd);\n            setStudents(toShow);\n        }\n    };\n\n    // Sort by first and last name\n    // SORTING ONLY SORTS THE PAGE VISIBLE AS RELIES ON STUDENTS STATE\n    const sortAscendingAZ = (a, b) => {\n        if (a.first_name < b.first_name) {\n            return -1;\n        } else if (a.first_name > b.first_name) {\n            return 1;\n        } else {\n            return 0;\n        }\n    };\n\n    const sortAscendingByFirstName = () => {\n        const studentsSortedByName = students.filter(student => student).sort(sortAscendingAZ);\n        setStudents(studentsSortedByName);\n    };\n\n    const sortDescendingAZ = (a, b) => {\n        if (b.first_name < a.first_name) {\n            return -1;\n        } else if (b.first_name > a.first_name) {\n            return 1;\n        } else {\n            return 0;\n        }\n    };\n\n    const sortDescendingByFirstName = () => {\n        const studentsSortedByName = students.filter(student => student).sort(sortDescendingAZ);\n        setStudents(studentsSortedByName);\n    };\n\n    const filterByCourseName = (e) => {\n        const courses = handleSetCourses(e.target.value);\n        const stateArray = [];\n\n        Object.keys(courses).filter(key => {\n            if (courses[key]) {\n                stateArray.push(key)\n            }\n        });\n\n        const filteredCourseName = studentsData.filter(student => stateArray.includes(student.course_name));\n\n        if (filteredCourseName.length === 0) {\n            getStudents(studentsData);\n        } else {\n            const filtered = filteredCourseName.slice(pageStart, pageEnd);\n            setStudents(filtered);\n        }\n\n        const filteredStateArray = stateArray.filter(courseName => courseName.includes(true));\n        \n        if (filteredStateArray) {\n            setShowResults(true)\n        } else {\n            setShowResults(false)\n        }\n\n    };\n\n    const displayPage = (pageStart, pageEnd) => {\n        const toShow = studentsData.slice(pageStart, pageEnd);\n        setStudents(toShow);\n    }\n\n    const nextPage = () => {\n        const newPageStart = pageStart + perPage;\n        const newPageEnd = pageEnd + perPage;\n        if (newPageStart < studentsData.length) {\n            setPageStart(newPageStart);\n        }\n        if (newPageEnd > studentsData.length) {\n            setPageEnd(studentsData.length);\n        } else {\n            setPageEnd(newPageEnd);\n        }\n        if (newPageStart < studentsData.length) {\n            displayPage(newPageStart, newPageEnd);\n        }\n    }\n\n    const previousPage = () => {\n        const newPageStart = pageStart - perPage;\n        let newPageEnd = pageEnd - perPage;\n        if (newPageStart >= 0) {\n            setPageStart(newPageStart);\n        }\n        if (newPageEnd % perPage != 0) {\n            setPageEnd(pageEnd - (newPageEnd % perPage));\n            newPageEnd = pageEnd - (newPageEnd % perPage);\n        } else {\n            if (newPageEnd > 0) {\n                setPageEnd(newPageEnd);\n            }\n        }\n        if (newPageStart >= 0) {\n            displayPage(newPageStart, newPageEnd);\n            if (pageEnd < perPage) {\n                displayPage(newPageStart, perPage)\n            } else {\n                displayPage(newPageStart, newPageEnd);\n            }\n        }\n    }\n\n    // Pagination\n    const togglePagination = () => {\n        setPagination(!pagination);\n    }\n\n    const togglePerPage = (e) => {\n        setPerPage(e.target.value);\n        setPageStart(0);\n        setPageEnd(e.target.value);\n        displayPage(0, e.target.value);\n        togglePagination();\n    }\n\n    const getStudents = () => {\n        const toShow = studentsData.slice(pageStart, pageEnd);\n        setStudents(toShow);\n    };\n\n    useEffect(() => {\n        getStudents();\n    }, []);\n\n    let length = 0;\n    if (students.length > perPage) {\n        length = perPage\n    } else {\n        length = students.length\n    }\n\n\n    return (\n        <div className=\"student-list\">\n            <div className=\"list-title\">\n                <h3 className=\"list-title__heading\">Student List</h3>\n                <Searchbox handleSearch={handleSearch} />\n                <Sort sortAscendingByFirstName={sortAscendingByFirstName} sortDescendingByFirstName={sortDescendingByFirstName} />\n                <Filter courses={courses} filterByCourseName={filterByCourseName} />\n            </div>\n            <StudentList studentData={students} />\n            <div className=\"pagination\">\n                <p>Rows per page</p>\n                <p onClick={togglePagination}>{perPage} <img src={downArrow} alt=\"down arrow\" /></p>\n                {pagination &&\n                    <ul>\n                    <li onClick={togglePerPage} value=\"5\">5</li>\n                    <li onClick={togglePerPage} value=\"10\">10</li>\n                    <li onClick={togglePerPage} value=\"15\">15</li>\n                    <li onClick={togglePerPage} value=\"20\">20</li>\n                    <li onClick={togglePerPage} value=\"25\">25</li>\n                    <li onClick={togglePerPage} value=\"30\">30</li>\n                </ul>}\n                \n            </div>\n            <div>\n                {!showResults && <p>{pageStart+1}-{pageEnd} of {studentsData.length}</p>}\n                {/* students is updated for pagination, so students.length will always be number of rows per page - need to make number of entries total of filter/search result */}\n                {showResults && <p>Showing results: {length} of {students.length}</p>}\n            </div>\n            <img src={chevronLeft} alt=\"previous page\" onClick={previousPage} />\n            <img src={chevronRight} alt=\"next page\" onClick={nextPage} />\n        </div>\n    );\n};\n\nexport default Students;\n"]},"metadata":{},"sourceType":"module"}