{"ast":null,"code":"var _jsxFileName = \"/Users/sarahholland/Documents/Nology/Projects/client-project/_nsight/src/pages/students/students.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport \"./students.scss\";\nimport Searchbox from \"../../components/searchbox/searchbox\";\nimport Sort from \"../../components/sort/sort\";\nimport StudentList from \"../../components/studentList/studentList\";\nimport studentsData from \"../../assets/data/student-data\";\nimport Filter from \"../../components/filter/filter\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Students = () => {\n  _s();\n\n  const [students, setStudents] = useState([]);\n  const [checkboxValue, setCheckboxValue] = useState(false);\n  const [checkboxConsultant, setCheckboxConsultant] = useState(false);\n  const [checkboxEmployed, setCheckboxEmployed] = useState(false); // Search by first and last name\n\n  const handleSearch = e => {\n    const sanitiseInput = e.target.value.toLowerCase();\n    const studentSearch = studentsData.filter(student => {\n      const sanitisedStudentFirstName = student.first_name.toLowerCase();\n      const sanitisedStudentLastName = student.last_name.toLowerCase();\n      const sanitisedStudentName = `${sanitisedStudentFirstName} ${sanitisedStudentLastName}`;\n      return sanitisedStudentName.includes(sanitiseInput);\n    });\n    setStudents(studentSearch);\n  }; // Sort by first and last name\n\n\n  const sortAscendingAZ = (a, b) => {\n    if (a.first_name < b.first_name) {\n      return -1;\n    } else if (a.first_name > b.first_name) {\n      return 1;\n    } else {\n      return 0;\n    }\n  };\n\n  const sortAscendingByFirstName = () => {\n    const studentsSortedByName = students.filter(student => student).sort(sortAscendingAZ);\n    setStudents(studentsSortedByName);\n  };\n\n  const sortDescendingAZ = (a, b) => {\n    if (b.first_name < a.first_name) {\n      return -1;\n    } else if (b.first_name > a.first_name) {\n      return 1;\n    } else {\n      return 0;\n    }\n  };\n\n  const sortDescendingByFirstName = () => {\n    const studentsSortedByName = students.filter(student => student).sort(sortDescendingAZ);\n    setStudents(studentsSortedByName);\n  }; // consumer/consultant, employed (boolean)\n\n\n  const filterByConsumer = e => {\n    if (checkboxValue) {\n      const filteredConsumers = students.filter(student => student.type === \"Consumer\");\n      setStudents(filteredConsumers);\n    } else {\n      setStudents(studentsData);\n    }\n  };\n\n  const filterByConsultant = e => {\n    if (checkboxConsultant) {\n      const filteredConsultants = students.filter(student => student.type === \"Consultant\");\n      setStudents(filteredConsultants);\n    } else {\n      setStudents(studentsData);\n    }\n  };\n\n  const filterByEmployed = e => {\n    if (checkboxEmployed) {\n      const filteredEmployed = students.filter(student => student.employed);\n      setStudents(filteredEmployed);\n    } else {\n      setStudents(studentsData);\n    }\n  };\n\n  const getStudents = () => {\n    setStudents(studentsData);\n  };\n\n  useEffect(() => {\n    getStudents();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"list-title\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"list-title__heading\",\n        children: \"Student List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Searchbox, {\n        handleSearch: handleSearch\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Sort, {\n        sortAscendingByFirstName: sortAscendingByFirstName,\n        sortDescendingByFirstName: sortDescendingByFirstName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Filter, {\n        filterByConsumer: filterByConsumer,\n        filterByConsultant: filterByConsultant,\n        filterByEmployed: filterByEmployed,\n        checkboxValue: checkboxValue,\n        setCheckboxValue: setCheckboxValue,\n        checkboxConsultant: checkboxConsultant,\n        setCheckboxConsultant: setCheckboxConsultant,\n        checkboxEmployed: checkboxEmployed,\n        setCheckboxEmployed: setch\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(StudentList, {\n      studentData: students\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Students, \"PUHke3OhCyTqFokMosRCmU6vsZI=\");\n\n_c = Students;\nexport default Students;\n\nvar _c;\n\n$RefreshReg$(_c, \"Students\");","map":{"version":3,"sources":["/Users/sarahholland/Documents/Nology/Projects/client-project/_nsight/src/pages/students/students.jsx"],"names":["useState","useEffect","Searchbox","Sort","StudentList","studentsData","Filter","Students","students","setStudents","checkboxValue","setCheckboxValue","checkboxConsultant","setCheckboxConsultant","checkboxEmployed","setCheckboxEmployed","handleSearch","e","sanitiseInput","target","value","toLowerCase","studentSearch","filter","student","sanitisedStudentFirstName","first_name","sanitisedStudentLastName","last_name","sanitisedStudentName","includes","sortAscendingAZ","a","b","sortAscendingByFirstName","studentsSortedByName","sort","sortDescendingAZ","sortDescendingByFirstName","filterByConsumer","filteredConsumers","type","filterByConsultant","filteredConsultants","filterByEmployed","filteredEmployed","employed","getStudents","setch"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAO,iBAAP;AACA,OAAOC,SAAP,MAAsB,sCAAtB;AACA,OAAOC,IAAP,MAAiB,4BAAjB;AACA,OAAOC,WAAP,MAAwB,0CAAxB;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AACA,OAAOC,MAAP,MAAmB,gCAAnB;;;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AACnB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BT,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACU,aAAD,EAAgBC,gBAAhB,IAAoCX,QAAQ,CAAC,KAAD,CAAlD;AACA,QAAM,CAACY,kBAAD,EAAqBC,qBAArB,IAA8Cb,QAAQ,CAAC,KAAD,CAA5D;AACA,QAAM,CAACc,gBAAD,EAAmBC,mBAAnB,IAA0Cf,QAAQ,CAAC,KAAD,CAAxD,CAJmB,CAMnB;;AACA,QAAMgB,YAAY,GAAIC,CAAD,IAAO;AACxB,UAAMC,aAAa,GAAGD,CAAC,CAACE,MAAF,CAASC,KAAT,CAAeC,WAAf,EAAtB;AACA,UAAMC,aAAa,GAAGjB,YAAY,CAACkB,MAAb,CAAoBC,OAAO,IAAI;AACjD,YAAMC,yBAAyB,GAAGD,OAAO,CAACE,UAAR,CAAmBL,WAAnB,EAAlC;AACA,YAAMM,wBAAwB,GAAGH,OAAO,CAACI,SAAR,CAAkBP,WAAlB,EAAjC;AACA,YAAMQ,oBAAoB,GAAI,GAAEJ,yBAA0B,IAAGE,wBAAyB,EAAtF;AACA,aAAOE,oBAAoB,CAACC,QAArB,CAA8BZ,aAA9B,CAAP;AACH,KALqB,CAAtB;AAMAT,IAAAA,WAAW,CAACa,aAAD,CAAX;AACH,GATD,CAPmB,CAkBnB;;;AACA,QAAMS,eAAe,GAAG,CAACC,CAAD,EAAIC,CAAJ,KAAU;AAC9B,QAAID,CAAC,CAACN,UAAF,GAAeO,CAAC,CAACP,UAArB,EAAiC;AAC7B,aAAO,CAAC,CAAR;AACH,KAFD,MAEO,IAAIM,CAAC,CAACN,UAAF,GAAeO,CAAC,CAACP,UAArB,EAAiC;AACpC,aAAO,CAAP;AACH,KAFM,MAEA;AACH,aAAO,CAAP;AACH;AACJ,GARD;;AAUA,QAAMQ,wBAAwB,GAAG,MAAM;AACnC,UAAMC,oBAAoB,GAAG3B,QAAQ,CAACe,MAAT,CAAgBC,OAAO,IAAIA,OAA3B,EAAoCY,IAApC,CAAyCL,eAAzC,CAA7B;AACAtB,IAAAA,WAAW,CAAC0B,oBAAD,CAAX;AACH,GAHD;;AAKA,QAAME,gBAAgB,GAAG,CAACL,CAAD,EAAIC,CAAJ,KAAU;AAC/B,QAAIA,CAAC,CAACP,UAAF,GAAeM,CAAC,CAACN,UAArB,EAAiC;AAC7B,aAAO,CAAC,CAAR;AACH,KAFD,MAEO,IAAIO,CAAC,CAACP,UAAF,GAAeM,CAAC,CAACN,UAArB,EAAiC;AACpC,aAAO,CAAP;AACH,KAFM,MAEA;AACH,aAAO,CAAP;AACH;AACJ,GARD;;AAUA,QAAMY,yBAAyB,GAAG,MAAM;AACpC,UAAMH,oBAAoB,GAAG3B,QAAQ,CAACe,MAAT,CAAgBC,OAAO,IAAIA,OAA3B,EAAoCY,IAApC,CAAyCC,gBAAzC,CAA7B;AACA5B,IAAAA,WAAW,CAAC0B,oBAAD,CAAX;AACH,GAHD,CA5CmB,CAiDnB;;;AACA,QAAMI,gBAAgB,GAAItB,CAAD,IAAO;AAC5B,QAAIP,aAAJ,EAAmB;AACf,YAAM8B,iBAAiB,GAAGhC,QAAQ,CAACe,MAAT,CAAgBC,OAAO,IAAIA,OAAO,CAACiB,IAAR,KAAiB,UAA5C,CAA1B;AACAhC,MAAAA,WAAW,CAAC+B,iBAAD,CAAX;AACH,KAHD,MAGO;AACH/B,MAAAA,WAAW,CAACJ,YAAD,CAAX;AACH;AACJ,GAPD;;AASA,QAAMqC,kBAAkB,GAAIzB,CAAD,IAAO;AAC9B,QAAIL,kBAAJ,EAAwB;AACpB,YAAM+B,mBAAmB,GAAGnC,QAAQ,CAACe,MAAT,CAAgBC,OAAO,IAAIA,OAAO,CAACiB,IAAR,KAAiB,YAA5C,CAA5B;AACAhC,MAAAA,WAAW,CAACkC,mBAAD,CAAX;AACH,KAHD,MAGO;AACHlC,MAAAA,WAAW,CAACJ,YAAD,CAAX;AACH;AACJ,GAPD;;AASA,QAAMuC,gBAAgB,GAAI3B,CAAD,IAAO;AAC5B,QAAIH,gBAAJ,EAAsB;AAClB,YAAM+B,gBAAgB,GAAGrC,QAAQ,CAACe,MAAT,CAAgBC,OAAO,IAAIA,OAAO,CAACsB,QAAnC,CAAzB;AACArC,MAAAA,WAAW,CAACoC,gBAAD,CAAX;AACH,KAHD,MAGO;AACHpC,MAAAA,WAAW,CAACJ,YAAD,CAAX;AACH;AACJ,GAPD;;AAUA,QAAM0C,WAAW,GAAG,MAAM;AACtBtC,IAAAA,WAAW,CAACJ,YAAD,CAAX;AACH,GAFD;;AAIAJ,EAAAA,SAAS,CAAC,MAAM;AACZ8C,IAAAA,WAAW;AACd,GAFQ,EAEN,EAFM,CAAT;AAIA,sBACI;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,8BACI;AAAI,QAAA,SAAS,EAAC,qBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,SAAD;AAAW,QAAA,YAAY,EAAE/B;AAAzB;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI,QAAC,IAAD;AAAM,QAAA,wBAAwB,EAAEkB,wBAAhC;AAA0D,QAAA,yBAAyB,EAAEI;AAArF;AAAA;AAAA;AAAA;AAAA,cAHJ,eAII,QAAC,MAAD;AAAQ,QAAA,gBAAgB,EAAEC,gBAA1B;AACA,QAAA,kBAAkB,EAAEG,kBADpB;AAEA,QAAA,gBAAgB,EAAEE,gBAFlB;AAGA,QAAA,aAAa,EAAElC,aAHf;AAIA,QAAA,gBAAgB,EAAEC,gBAJlB;AAKA,QAAA,kBAAkB,EAAEC,kBALpB;AAMA,QAAA,qBAAqB,EAAEC,qBANvB;AAOA,QAAA,gBAAgB,EAAEC,gBAPlB;AAQA,QAAA,mBAAmB,EAAEkC;AARrB;AAAA;AAAA;AAAA;AAAA,cAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAgBI,QAAC,WAAD;AAAa,MAAA,WAAW,EAAExC;AAA1B;AAAA;AAAA;AAAA;AAAA,YAhBJ;AAAA,kBADJ;AAoBH,CA1GD;;GAAMD,Q;;KAAAA,Q;AA4GN,eAAeA,QAAf","sourcesContent":["import { useState, useEffect } from \"react\";\nimport \"./students.scss\";\nimport Searchbox from \"../../components/searchbox/searchbox\";\nimport Sort from \"../../components/sort/sort\";\nimport StudentList from \"../../components/studentList/studentList\";\nimport studentsData from \"../../assets/data/student-data\";\nimport Filter from \"../../components/filter/filter\";\n\nconst Students = () => {\n    const [students, setStudents] = useState([]);\n    const [checkboxValue, setCheckboxValue] = useState(false);\n    const [checkboxConsultant, setCheckboxConsultant] = useState(false);\n    const [checkboxEmployed, setCheckboxEmployed] = useState(false);\n\n    // Search by first and last name\n    const handleSearch = (e) => {\n        const sanitiseInput = e.target.value.toLowerCase();\n        const studentSearch = studentsData.filter(student => {\n            const sanitisedStudentFirstName = student.first_name.toLowerCase();\n            const sanitisedStudentLastName = student.last_name.toLowerCase();\n            const sanitisedStudentName = `${sanitisedStudentFirstName} ${sanitisedStudentLastName}`;\n            return sanitisedStudentName.includes(sanitiseInput);\n        })\n        setStudents(studentSearch)\n    };\n\n    // Sort by first and last name\n    const sortAscendingAZ = (a, b) => {\n        if (a.first_name < b.first_name) {\n            return -1;\n        } else if (a.first_name > b.first_name) {\n            return 1;\n        } else {\n            return 0;\n        }\n    };\n\n    const sortAscendingByFirstName = () => {\n        const studentsSortedByName = students.filter(student => student).sort(sortAscendingAZ);\n        setStudents(studentsSortedByName);\n    };\n\n    const sortDescendingAZ = (a, b) => {\n        if (b.first_name < a.first_name) {\n            return -1;\n        } else if (b.first_name > a.first_name) {\n            return 1;\n        } else {\n            return 0;\n        }\n    };\n\n    const sortDescendingByFirstName = () => {\n        const studentsSortedByName = students.filter(student => student).sort(sortDescendingAZ);\n        setStudents(studentsSortedByName);\n    };\n\n    // consumer/consultant, employed (boolean)\n    const filterByConsumer = (e) => {\n        if (checkboxValue) {\n            const filteredConsumers = students.filter(student => student.type === \"Consumer\");\n            setStudents(filteredConsumers);\n        } else {\n            setStudents(studentsData);\n        }\n    }\n\n    const filterByConsultant = (e) => {\n        if (checkboxConsultant) {\n            const filteredConsultants = students.filter(student => student.type === \"Consultant\");\n            setStudents(filteredConsultants);\n        } else {\n            setStudents(studentsData);\n        }\n    }\n\n    const filterByEmployed = (e) => {\n        if (checkboxEmployed) {\n            const filteredEmployed = students.filter(student => student.employed);\n            setStudents(filteredEmployed);\n        } else {\n            setStudents(studentsData);\n        }\n    }\n\n\n    const getStudents = () => {\n        setStudents(studentsData);\n    };\n\n    useEffect(() => {\n        getStudents();\n    }, []);\n\n    return (\n        <>\n            <div className=\"list-title\">\n                <h3 className=\"list-title__heading\">Student List</h3>\n                <Searchbox handleSearch={handleSearch} />\n                <Sort sortAscendingByFirstName={sortAscendingByFirstName} sortDescendingByFirstName={sortDescendingByFirstName} />\n                <Filter filterByConsumer={filterByConsumer} \n                filterByConsultant={filterByConsultant} \n                filterByEmployed={filterByEmployed} \n                checkboxValue={checkboxValue}\n                setCheckboxValue={setCheckboxValue}\n                checkboxConsultant={checkboxConsultant}\n                setCheckboxConsultant={setCheckboxConsultant}\n                checkboxEmployed={checkboxEmployed}\n                setCheckboxEmployed={setch}\n                />\n            </div>\n            <StudentList studentData={students} />\n        </>\n    )\n};\n\nexport default Students;\n"]},"metadata":{},"sourceType":"module"}