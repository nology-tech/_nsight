{"ast":null,"code":"var _jsxFileName = \"/Users/jeromekithinji/Development/_nsight/src/pages/students/students.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport \"./students.scss\";\nimport Searchbox from \"../../components/searchbox/searchbox\";\nimport Sort from \"../../components/sort/sort\";\nimport StudentList from \"../../components/studentList/studentList\";\nimport studentsData from \"../../assets/data/student-data\";\nimport Filter from \"../../components/filter/filter\";\nimport chevronLeft from \"../../assets/icons/chevron-left.svg\";\nimport chevronRight from \"../../assets/icons/chevron-right.svg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Students = () => {\n  _s();\n\n  const [students, setStudents] = useState([]);\n\n  const unique = (value, index, self) => {\n    return self.indexOf(value) === index;\n  };\n\n  const courseNames = studentsData.map(student => student.course_name);\n  const uniqueCourseNames = courseNames.filter(unique);\n\n  const createStatefulObject = courseNames => {\n    return courseNames.reduce((statefulObject, courseName) => {\n      statefulObject[courseName] = false;\n      return statefulObject;\n    }, {});\n  };\n\n  const [courses, setCourses] = useState(createStatefulObject(uniqueCourseNames));\n\n  const handleSetCourses = courseName => {\n    const tempCourses = { ...courses\n    };\n    tempCourses[courseName] = !tempCourses[courseName];\n    setCourses(tempCourses); // not synchronous\n\n    return tempCourses;\n  };\n\n  console.log(courses); // Search by first and last name\n\n  const handleSearch = e => {\n    const sanitiseInput = e.target.value.toLowerCase();\n    const studentSearch = studentsData.filter(student => {\n      const sanitisedStudentFirstName = student.first_name.toLowerCase();\n      const sanitisedStudentLastName = student.last_name.toLowerCase();\n      const sanitisedStudentName = `${sanitisedStudentFirstName} ${sanitisedStudentLastName}`;\n      return sanitisedStudentName.includes(sanitiseInput);\n    });\n    setStudents(studentSearch);\n  }; // Sort by first and last name\n\n\n  const sortAscendingAZ = (a, b) => {\n    if (a.first_name < b.first_name) {\n      return -1;\n    } else if (a.first_name > b.first_name) {\n      return 1;\n    } else {\n      return 0;\n    }\n  };\n\n  const sortAscendingByFirstName = () => {\n    const studentsSortedByName = students.filter(student => student).sort(sortAscendingAZ);\n    setStudents(studentsSortedByName);\n  };\n\n  const sortDescendingAZ = (a, b) => {\n    if (b.first_name < a.first_name) {\n      return -1;\n    } else if (b.first_name > a.first_name) {\n      return 1;\n    } else {\n      return 0;\n    }\n  };\n\n  const sortDescendingByFirstName = () => {\n    const studentsSortedByName = students.filter(student => student).sort(sortDescendingAZ);\n    setStudents(studentsSortedByName);\n  };\n\n  const filterByCourseName = e => {\n    const courses = handleSetCourses(e.target.value);\n    const stateArray = [];\n    Object.keys(courses).filter(key => {\n      if (courses[key]) {\n        stateArray.push(key);\n      }\n    });\n    const filteredCourseName = studentsData.filter(student => stateArray.includes(student.course_name));\n\n    if (filteredCourseName.length === 0) {\n      getStudents(studentsData);\n    } else {\n      setStudents(filteredCourseName);\n    }\n  };\n\n  const [pageStart, setPageStart] = useState(0);\n  const [pageEnd, setPageEnd] = useState(10);\n\n  const displayPage = (pageStart, pageEnd) => {\n    const toShow = studentsData.slice(pageStart, pageEnd);\n    setStudents(toShow);\n  };\n\n  const nextPage = () => {\n    const newPageStart = pageStart + 10;\n    const newPageEnd = pageEnd + 10;\n\n    if (newPageStart < studentsData.length) {\n      setPageStart(newPageStart);\n    }\n\n    if (newPageEnd > studentsData.length) {\n      setPageEnd(studentsData.length);\n    } else {\n      setPageEnd(newPageEnd);\n    }\n\n    displayPage(newPageStart, newPageEnd);\n    console.log(newPageStart);\n    console.log(newPageEnd);\n  };\n\n  const previousPage = () => {\n    const newPageStart = pageStart - 10;\n    const newPageEnd = pageEnd - 10;\n    setPageStart(newPageStart);\n\n    if (newPageEnd > studentsData.length) {\n      setPageEnd(studentsData.length);\n    } else {\n      setPageEnd(newPageEnd);\n    }\n\n    displayPage(newPageStart, newPageEnd);\n    console.log(newPageStart);\n    console.log(newPageEnd);\n  };\n\n  const getStudents = () => {\n    // setStudents(studentsData);\n    const toShow = studentsData.slice(pageStart, pageEnd);\n    setStudents(toShow);\n  };\n\n  useEffect(() => {\n    getStudents();\n  }, []); // useEffect(() => {\n  //     displayPage();\n  // }, []);\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"list-title\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"list-title__heading\",\n        children: \"Student List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Searchbox, {\n        handleSearch: handleSearch\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Sort, {\n        sortAscendingByFirstName: sortAscendingByFirstName,\n        sortDescendingByFirstName: sortDescendingByFirstName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Filter, {\n        courses: courses,\n        filterByCourseName: filterByCourseName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(StudentList, {\n      studentData: students\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [pageStart + 1, \"-\", pageEnd, \" of \", studentsData.length]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: chevronLeft,\n      alt: \"previous page\",\n      onClick: nextPage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: chevronRight,\n      alt: \"next page\",\n      onClick: nextPage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Students, \"gaG1i1PNTORzILf+TyF45iMkQoU=\");\n\n_c = Students;\nexport default Students;\n\nvar _c;\n\n$RefreshReg$(_c, \"Students\");","map":{"version":3,"sources":["/Users/jeromekithinji/Development/_nsight/src/pages/students/students.jsx"],"names":["React","useState","useEffect","Searchbox","Sort","StudentList","studentsData","Filter","Students","students","setStudents","unique","value","index","self","indexOf","courseNames","map","student","course_name","uniqueCourseNames","filter","createStatefulObject","reduce","statefulObject","courseName","courses","setCourses","handleSetCourses","tempCourses","console","log","handleSearch","e","sanitiseInput","target","toLowerCase","studentSearch","sanitisedStudentFirstName","first_name","sanitisedStudentLastName","last_name","sanitisedStudentName","includes","sortAscendingAZ","a","b","sortAscendingByFirstName","studentsSortedByName","sort","sortDescendingAZ","sortDescendingByFirstName","filterByCourseName","stateArray","Object","keys","key","push","filteredCourseName","length","getStudents","pageStart","setPageStart","pageEnd","setPageEnd","displayPage","toShow","slice","nextPage","newPageStart","newPageEnd","previousPage","chevronLeft","chevronRight"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./students.scss\";\nimport Searchbox from \"../../components/searchbox/searchbox\";\nimport Sort from \"../../components/sort/sort\";\nimport StudentList from \"../../components/studentList/studentList\";\nimport studentsData from \"../../assets/data/student-data\";\nimport Filter from \"../../components/filter/filter\";\nimport chevronLeft from \"../../assets/icons/chevron-left.svg\";\nimport chevronRight from \"../../assets/icons/chevron-right.svg\";\n\nconst Students = () => {\n    const [students, setStudents] = useState([]);\n\n    const unique = (value, index, self) => {\n        return self.indexOf(value) === index\n    }\n\n    const courseNames = studentsData.map(student => student.course_name);\n\n    const uniqueCourseNames = courseNames.filter(unique);\n    \n    const createStatefulObject = (courseNames) => {\n        return courseNames.reduce((statefulObject, courseName) => {\n            statefulObject[courseName] = false;\n            return statefulObject;\n        }, {})\n    }\n\n    const [courses, setCourses] = useState(createStatefulObject(uniqueCourseNames))\n\n    const handleSetCourses = (courseName) => {\n        const tempCourses = {...courses};\n        tempCourses[courseName] = !tempCourses[courseName];\n\n        setCourses(tempCourses); // not synchronous\n        return tempCourses;\n    }\n    console.log(courses)\n\n    // Search by first and last name\n    const handleSearch = (e) => {\n        const sanitiseInput = e.target.value.toLowerCase();\n        const studentSearch = studentsData.filter(student => {\n            const sanitisedStudentFirstName = student.first_name.toLowerCase();\n            const sanitisedStudentLastName = student.last_name.toLowerCase();\n            const sanitisedStudentName = `${sanitisedStudentFirstName} ${sanitisedStudentLastName}`;\n            return sanitisedStudentName.includes(sanitiseInput);\n        })\n        setStudents(studentSearch)\n    };\n\n    // Sort by first and last name\n    const sortAscendingAZ = (a, b) => {\n        if (a.first_name < b.first_name) {\n            return -1;\n        } else if (a.first_name > b.first_name) {\n            return 1;\n        } else {\n            return 0;\n        }\n    };\n\n    const sortAscendingByFirstName = () => {\n        const studentsSortedByName = students.filter(student => student).sort(sortAscendingAZ);\n        setStudents(studentsSortedByName);\n    };\n\n    const sortDescendingAZ = (a, b) => {\n        if (b.first_name < a.first_name) {\n            return -1;\n        } else if (b.first_name > a.first_name) {\n            return 1;\n        } else {\n            return 0;\n        }\n    };\n\n    const sortDescendingByFirstName = () => {\n        const studentsSortedByName = students.filter(student => student).sort(sortDescendingAZ);\n        setStudents(studentsSortedByName);\n    };\n\n    const filterByCourseName = (e) => {\n        const courses = handleSetCourses(e.target.value);\n        const stateArray = [];\n\n        Object.keys(courses).filter(key => {\n            if (courses[key]) {\n                stateArray.push(key)\n            }\n        });\n\n        const filteredCourseName = studentsData.filter(student => stateArray.includes(student.course_name));\n\n        if (filteredCourseName.length === 0) {\n            getStudents(studentsData);\n        } else {\n            setStudents(filteredCourseName);\n        }\n    };\n\n    const [pageStart, setPageStart] = useState(0);\n    const [pageEnd, setPageEnd] = useState(10);\n\n    const displayPage = (pageStart, pageEnd) => {\n        const toShow = studentsData.slice(pageStart, pageEnd);\n        setStudents(toShow);\n    }\n\n    const nextPage = () => {\n        const newPageStart = pageStart+ 10;\n        const newPageEnd = pageEnd+ 10;\n        if (newPageStart < studentsData.length) {\n            setPageStart(newPageStart);\n        }\n        if (newPageEnd > studentsData.length) {\n            setPageEnd(studentsData.length);\n        } else {\n            setPageEnd(newPageEnd);\n        }\n        displayPage(newPageStart, newPageEnd);\n        console.log(newPageStart);\n        console.log(newPageEnd);\n    }\n\n    const previousPage = () => {\n        const newPageStart = pageStart- 10;\n        const newPageEnd = pageEnd- 10;\n        setPageStart(newPageStart);\n        if (newPageEnd > studentsData.length) {\n            setPageEnd(studentsData.length);\n        } else {\n            setPageEnd(newPageEnd);\n        }\n        displayPage(newPageStart, newPageEnd);\n        console.log(newPageStart);\n        console.log(newPageEnd);\n    }\n\n    const getStudents = () => {\n        // setStudents(studentsData);\n        const toShow = studentsData.slice(pageStart, pageEnd);\n        setStudents(toShow);\n    };\n\n    useEffect(() => {\n        getStudents();\n    }, []);\n\n    // useEffect(() => {\n    //     displayPage();\n    // }, []);\n\n    return (\n        <>\n            <div className=\"list-title\">\n                <h3 className=\"list-title__heading\">Student List</h3>\n                <Searchbox handleSearch={handleSearch} />\n                <Sort sortAscendingByFirstName={sortAscendingByFirstName} sortDescendingByFirstName={sortDescendingByFirstName} />\n                <Filter courses={courses} filterByCourseName={filterByCourseName} />\n            </div>\n            <StudentList studentData={students} />\n            <p>{pageStart+1}-{pageEnd} of {studentsData.length}</p>\n            <img src={chevronLeft} alt=\"previous page\" onClick={nextPage} />\n            <img src={chevronRight} alt=\"next page\" onClick={nextPage} />\n        </>\n    );\n};\n\nexport default Students;\n"]},"metadata":{},"sourceType":"module"}