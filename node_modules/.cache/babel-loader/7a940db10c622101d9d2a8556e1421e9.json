{"ast":null,"code":"var _jsxFileName = \"/Users/sarahholland/Documents/Nology/Projects/client-project/_nsight/src/pages/students/students.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport \"./students.scss\";\nimport Searchbox from \"../../components/searchbox/searchbox\";\nimport Sort from \"../../components/sort/sort\";\nimport StudentList from \"../../components/studentList/studentList\";\nimport studentsData from \"../../assets/data/student-data\";\nimport Filter from \"../../components/filter/filter\";\nimport chevronLeft from \"../../assets/icons/chevron-left.svg\";\nimport chevronRight from \"../../assets/icons/chevron-right.svg\";\nimport downArrow from \"../../assets/icons/down-arrow.svg\";\nimport TopHeader from \"../../components/topheader/topheader\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Students = () => {\n  _s();\n\n  const [students, setStudents] = useState([]);\n  const [studentsCopy, setStudentsCopy] = useState([]);\n  const [pagination, setPagination] = useState(false);\n  const [perPage, setPerPage] = useState(10);\n  const [pageStart, setPageStart] = useState(0);\n  const [pageEnd, setPageEnd] = useState(perPage);\n  const [showResults, setShowResults] = useState(false); // SEARCH by first and last name\n\n  const handleSearch = e => {\n    const sanitiseInput = e.target.value.toLowerCase();\n    const studentSearch = studentsData.filter(student => {\n      const sanitisedStudentFirstName = student.first_name.toLowerCase();\n      const sanitisedStudentLastName = student.last_name.toLowerCase();\n      const sanitisedStudentName = `${sanitisedStudentFirstName} ${sanitisedStudentLastName}`;\n      return sanitisedStudentName.includes(sanitiseInput);\n    });\n    setStudentsCopy(studentSearch);\n    const toShow = studentSearch.slice(pageStart, pageEnd);\n    setStudents(toShow);\n    setShowResults(true);\n\n    if (e.target.value.length === 0) {\n      setShowResults(false);\n      const toShow = studentsData.slice(pageStart, pageEnd);\n      setStudents(toShow);\n      setStudentsCopy(studentsData);\n    }\n  }; // SORT by first and last name\n\n\n  const sortAscendingAZ = (a, b) => {\n    if (a.first_name < b.first_name) {\n      return -1;\n    } else if (a.first_name > b.first_name) {\n      return 1;\n    } else {\n      return 0;\n    }\n  };\n\n  const sortAscendingByFirstName = () => {\n    const studentsSortedByName = studentsCopy.filter(student => student).sort(sortAscendingAZ);\n    setStudentsCopy(studentsSortedByName);\n    const toShow = studentsSortedByName.slice(pageStart, pageEnd);\n    setStudents(toShow);\n  };\n\n  const sortDescendingAZ = (a, b) => {\n    if (b.first_name < a.first_name) {\n      return -1;\n    } else if (b.first_name > a.first_name) {\n      return 1;\n    } else {\n      return 0;\n    }\n  };\n\n  const sortDescendingByFirstName = () => {\n    const studentsSortedByName = studentsCopy.filter(student => student).sort(sortDescendingAZ);\n    setStudentsCopy(studentsSortedByName);\n    const toShow = studentsSortedByName.slice(pageStart, pageEnd);\n    setStudents(toShow);\n  }; // FILTER - Dynamic filter checkboxes\n\n\n  const unique = (value, index, self) => {\n    return self.indexOf(value) === index;\n  };\n\n  const courseNames = studentsData.map(student => student.course_name);\n  const uniqueCourseNames = courseNames.filter(unique);\n\n  const createStatefulObject = courseNames => {\n    return courseNames.reduce((statefulObject, courseName) => {\n      statefulObject[courseName] = false;\n      return statefulObject;\n    }, {});\n  };\n\n  const [courses, setCourses] = useState(createStatefulObject(uniqueCourseNames));\n\n  const handleSetCourses = courseName => {\n    const tempCourses = { ...courses\n    };\n    tempCourses[courseName] = !tempCourses[courseName];\n    setCourses(tempCourses); // not synchronous\n\n    return tempCourses;\n  };\n\n  const filterByCourseName = e => {\n    const courses = handleSetCourses(e.target.value);\n    const stateArray = Object.keys(courses).filter(key => courses[key]);\n    const filteredCourseName = studentsData.filter(student => stateArray.includes(student.course_name));\n\n    if (filteredCourseName.length === 0) {\n      getStudents(studentsData);\n    } else {\n      setStudentsCopy(filteredCourseName);\n      const filtered = filteredCourseName.slice(pageStart, pageEnd);\n      setStudents(filtered);\n    }\n\n    const filteredStateArray = stateArray.filter(courseName => courseName.includes(true));\n\n    if (filteredStateArray) {\n      setShowResults(true);\n    } else {\n      setShowResults(false);\n    }\n  }; // PAGINATION\n\n\n  const displayPage = (pageStart, pageEnd) => {\n    const toShow = studentsData.slice(pageStart, pageEnd);\n    setStudents(toShow);\n  };\n\n  const nextPage = () => {\n    const newPageStart = pageStart + perPage;\n    const newPageEnd = pageEnd + perPage;\n\n    if (newPageStart < studentsCopy.length) {\n      setPageStart(newPageStart);\n    }\n\n    if (newPageEnd > studentsCopy.length) {\n      setPageEnd(studentsCopy.length);\n    } else {\n      setPageEnd(newPageEnd);\n    }\n\n    if (newPageStart < studentsCopy.length) {\n      const toShow = studentsCopy.slice(newPageStart, newPageEnd);\n      setStudents(toShow);\n    }\n  };\n\n  const previousPage = () => {\n    const newPageStart = pageStart - perPage;\n    let newPageEnd = pageEnd - perPage;\n\n    if (newPageStart >= 0) {\n      setPageStart(newPageStart);\n    }\n\n    if (newPageEnd % perPage !== 0) {\n      setPageEnd(pageEnd - newPageEnd % perPage);\n      newPageEnd = pageEnd - newPageEnd % perPage;\n    } else {\n      if (newPageEnd > 0) {\n        setPageEnd(newPageEnd);\n      }\n    }\n\n    if (newPageStart >= 0) {\n      const toShow = studentsCopy.slice(newPageStart, newPageEnd);\n      setStudents(toShow);\n\n      if (pageEnd < perPage) {\n        const toShow = studentsCopy.slice(newPageStart, perPage);\n        setStudents(toShow);\n      } else {\n        const toShow = studentsCopy.slice(newPageStart, newPageEnd);\n        setStudents(toShow);\n      }\n    }\n  };\n\n  const togglePagination = () => {\n    setPagination(!pagination);\n  };\n\n  const togglePerPage = e => {\n    setPerPage(e.target.value);\n    setPageStart(0);\n    setPageEnd(e.target.value);\n    displayPage(0, e.target.value);\n    togglePagination();\n  };\n\n  const getStudents = () => {\n    const toShow = studentsData.slice(pageStart, pageEnd);\n    setStudentsCopy(studentsData);\n    setStudents(toShow);\n  };\n\n  useEffect(() => {\n    getStudents();\n  }, []);\n  let length = 0;\n\n  if (students.length > perPage) {\n    length = perPage;\n  } else {\n    length = students.length;\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main-student\",\n    children: [/*#__PURE__*/_jsxDEV(TopHeader, {\n      title: \"Students\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"student-heading\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Student List\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"student-heading__subsets\",\n          children: [/*#__PURE__*/_jsxDEV(Searchbox, {\n            handleSearch: handleSearch\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Sort, {\n            sortAscendingByFirstName: sortAscendingByFirstName,\n            sortDescendingByFirstName: sortDescendingByFirstName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Filter, {\n            courses: courses,\n            filterByCourseName: filterByCourseName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(StudentList, {\n        studentData: students\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"page-results\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"pagination\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Rows per page: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            onClick: togglePagination,\n            children: [perPage, \" \", /*#__PURE__*/_jsxDEV(\"img\", {\n              src: downArrow,\n              alt: \"down arrow\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 245,\n              columnNumber: 39\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 25\n          }, this), pagination && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"pagination-list\",\n            children: /*#__PURE__*/_jsxDEV(\"ul\", {\n              children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                onClick: togglePerPage,\n                value: \"5\",\n                children: \"5\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 250,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                onClick: togglePerPage,\n                value: \"10\",\n                children: \"10\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 253,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                onClick: togglePerPage,\n                value: \"15\",\n                children: \"15\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 256,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                onClick: togglePerPage,\n                value: \"20\",\n                children: \"20\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 259,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 249,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 29\n          }, this) //     <select name=\"cars\" id=\"cars\">\n          //     <option value=\"5\">5</option>\n          //     <option value=\"10\">10</option>\n          //     <option value=\"15\">15</option>\n          //     <option value=\"20\">20</option>\n          // </select>\n          ]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"show-results\",\n          children: [!showResults && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [pageStart + 1, \"-\", pageEnd, \" of \", studentsData.length]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 25\n          }, this), showResults && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Showing results: \", pageStart + 1, \"-\", pageEnd, \" of \", studentsCopy.length]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 279,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"chevron-previous\",\n          src: chevronLeft,\n          alt: \"previous page\",\n          onClick: previousPage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: chevronRight,\n          alt: \"next page\",\n          onClick: nextPage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 221,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Students, \"SjWNsXvoNFpeQ6sd5yphfVyTFG4=\");\n\n_c = Students;\nexport default Students;\n\nvar _c;\n\n$RefreshReg$(_c, \"Students\");","map":{"version":3,"sources":["/Users/sarahholland/Documents/Nology/Projects/client-project/_nsight/src/pages/students/students.jsx"],"names":["React","useState","useEffect","Searchbox","Sort","StudentList","studentsData","Filter","TopHeader","Students","students","setStudents","studentsCopy","setStudentsCopy","pagination","setPagination","perPage","setPerPage","pageStart","setPageStart","pageEnd","setPageEnd","showResults","setShowResults","handleSearch","e","sanitiseInput","target","value","toLowerCase","studentSearch","filter","student","sanitisedStudentFirstName","first_name","sanitisedStudentLastName","last_name","sanitisedStudentName","includes","toShow","slice","length","sortAscendingAZ","a","b","sortAscendingByFirstName","studentsSortedByName","sort","sortDescendingAZ","sortDescendingByFirstName","unique","index","self","indexOf","courseNames","map","course_name","uniqueCourseNames","createStatefulObject","reduce","statefulObject","courseName","courses","setCourses","handleSetCourses","tempCourses","filterByCourseName","stateArray","Object","keys","key","filteredCourseName","getStudents","filtered","filteredStateArray","displayPage","nextPage","newPageStart","newPageEnd","previousPage","togglePagination","togglePerPage","downArrow","chevronLeft","chevronRight"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./students.scss\";\nimport Searchbox from \"../../components/searchbox/searchbox\";\nimport Sort from \"../../components/sort/sort\";\nimport StudentList from \"../../components/studentList/studentList\";\nimport studentsData from \"../../assets/data/student-data\";\nimport Filter from \"../../components/filter/filter\";\nimport chevronLeft from \"../../assets/icons/chevron-left.svg\";\nimport chevronRight from \"../../assets/icons/chevron-right.svg\";\nimport downArrow from \"../../assets/icons/down-arrow.svg\";\nimport TopHeader from \"../../components/topheader/topheader\";\n\nconst Students = () => {\n    const [students, setStudents] = useState([]);\n    const [studentsCopy, setStudentsCopy] = useState([]);\n    const [pagination, setPagination] = useState(false);\n    const [perPage, setPerPage] = useState(10);\n    const [pageStart, setPageStart] = useState(0);\n    const [pageEnd, setPageEnd] = useState(perPage);\n    const [showResults, setShowResults] = useState(false);\n\n    // SEARCH by first and last name\n    const handleSearch = (e) => {\n        const sanitiseInput = e.target.value.toLowerCase();\n        const studentSearch = studentsData.filter((student) => {\n            const sanitisedStudentFirstName = student.first_name.toLowerCase();\n            const sanitisedStudentLastName = student.last_name.toLowerCase();\n            const sanitisedStudentName = `${sanitisedStudentFirstName} ${sanitisedStudentLastName}`;\n            return sanitisedStudentName.includes(sanitiseInput);\n        });\n        setStudentsCopy(studentSearch);\n        const toShow = studentSearch.slice(pageStart, pageEnd);\n        setStudents(toShow);\n\n        setShowResults(true);\n        if (e.target.value.length === 0) {\n            setShowResults(false);\n            const toShow = studentsData.slice(pageStart, pageEnd);\n            setStudents(toShow);\n            setStudentsCopy(studentsData);\n        }\n    };\n\n    // SORT by first and last name\n    const sortAscendingAZ = (a, b) => {\n        if (a.first_name < b.first_name) {\n            return -1;\n        } else if (a.first_name > b.first_name) {\n            return 1;\n        } else {\n            return 0;\n        }\n    };\n\n    const sortAscendingByFirstName = () => {\n        const studentsSortedByName = studentsCopy\n            .filter((student) => student)\n            .sort(sortAscendingAZ);\n        setStudentsCopy(studentsSortedByName);\n\n        const toShow = studentsSortedByName.slice(pageStart, pageEnd);\n        setStudents(toShow);\n    };\n\n    const sortDescendingAZ = (a, b) => {\n        if (b.first_name < a.first_name) {\n            return -1;\n        } else if (b.first_name > a.first_name) {\n            return 1;\n        } else {\n            return 0;\n        }\n    };\n\n    const sortDescendingByFirstName = () => {\n        const studentsSortedByName = studentsCopy\n            .filter((student) => student)\n            .sort(sortDescendingAZ);\n        setStudentsCopy(studentsSortedByName);\n\n        const toShow = studentsSortedByName.slice(pageStart, pageEnd);\n        setStudents(toShow);\n    };\n\n    // FILTER - Dynamic filter checkboxes\n    const unique = (value, index, self) => {\n        return self.indexOf(value) === index;\n    };\n\n    const courseNames = studentsData.map((student) => student.course_name);\n\n    const uniqueCourseNames = courseNames.filter(unique);\n\n    const createStatefulObject = (courseNames) => {\n        return courseNames.reduce((statefulObject, courseName) => {\n            statefulObject[courseName] = false;\n            return statefulObject;\n        }, {});\n    };\n\n    const [courses, setCourses] = useState(\n        createStatefulObject(uniqueCourseNames)\n    );\n\n    const handleSetCourses = (courseName) => {\n        const tempCourses = { ...courses };\n        tempCourses[courseName] = !tempCourses[courseName];\n\n        setCourses(tempCourses); // not synchronous\n        return tempCourses;\n    };\n\n    const filterByCourseName = (e) => {\n        const courses = handleSetCourses(e.target.value);\n        const stateArray = Object.keys(courses).filter((key) => courses[key]);\n\n        const filteredCourseName = studentsData.filter((student) =>\n            stateArray.includes(student.course_name)\n        );\n\n        if (filteredCourseName.length === 0) {\n            getStudents(studentsData);\n        } else {\n            setStudentsCopy(filteredCourseName);\n            const filtered = filteredCourseName.slice(pageStart, pageEnd);\n            setStudents(filtered);\n        }\n\n        const filteredStateArray = stateArray.filter((courseName) =>\n            courseName.includes(true)\n        );\n\n        if (filteredStateArray) {\n            setShowResults(true);\n        } else {\n            setShowResults(false);\n        }\n    };\n\n    // PAGINATION\n    const displayPage = (pageStart, pageEnd) => {\n        const toShow = studentsData.slice(pageStart, pageEnd);\n        setStudents(toShow);\n    };\n\n    const nextPage = () => {\n        const newPageStart = pageStart + perPage;\n        const newPageEnd = pageEnd + perPage;\n        if (newPageStart < studentsCopy.length) {\n            setPageStart(newPageStart);\n        }\n        if (newPageEnd > studentsCopy.length) {\n            setPageEnd(studentsCopy.length);\n        } else {\n            setPageEnd(newPageEnd);\n        }\n        if (newPageStart < studentsCopy.length) {\n            const toShow = studentsCopy.slice(newPageStart, newPageEnd);\n            setStudents(toShow);\n        }\n    };\n\n    const previousPage = () => {\n        const newPageStart = pageStart - perPage;\n        let newPageEnd = pageEnd - perPage;\n        if (newPageStart >= 0) {\n            setPageStart(newPageStart);\n        }\n        if (newPageEnd % perPage !== 0) {\n            setPageEnd(pageEnd - (newPageEnd % perPage));\n            newPageEnd = pageEnd - (newPageEnd % perPage);\n        } else {\n            if (newPageEnd > 0) {\n                setPageEnd(newPageEnd);\n            }\n        }\n        if (newPageStart >= 0) {\n            const toShow = studentsCopy.slice(newPageStart, newPageEnd);\n            setStudents(toShow);\n\n            if (pageEnd < perPage) {\n                const toShow = studentsCopy.slice(newPageStart, perPage);\n                setStudents(toShow);\n            } else {\n                const toShow = studentsCopy.slice(newPageStart, newPageEnd);\n                setStudents(toShow);\n            }\n        }\n    };\n\n    const togglePagination = () => {\n        setPagination(!pagination);\n    };\n\n    const togglePerPage = (e) => {\n        setPerPage(e.target.value);\n        setPageStart(0);\n        setPageEnd(e.target.value);\n        displayPage(0, e.target.value);\n        togglePagination();\n    };\n\n    const getStudents = () => {\n        const toShow = studentsData.slice(pageStart, pageEnd);\n        setStudentsCopy(studentsData);\n        setStudents(toShow);\n    };\n\n    useEffect(() => {\n        getStudents();\n    }, []);\n\n    let length = 0;\n    if (students.length > perPage) {\n        length = perPage;\n    } else {\n        length = students.length;\n    }\n\n    return (\n        <div className=\"main-student\">\n            <TopHeader title=\"Students\" />\n            <div className=\"container\">\n                <div className=\"student-heading\">\n                    <div>\n                        <h3>Student List</h3>\n                    </div>\n                    <div className=\"student-heading__subsets\">\n                        <Searchbox handleSearch={handleSearch} />\n                        <Sort\n                            sortAscendingByFirstName={sortAscendingByFirstName}\n                            sortDescendingByFirstName={sortDescendingByFirstName}\n                        />\n                        <Filter\n                            courses={courses}\n                            filterByCourseName={filterByCourseName}\n                        />\n                    </div>\n                </div>\n                <StudentList studentData={students} />\n                <div className=\"page-results\">\n                    <div className=\"pagination\">\n                        <p>Rows per page: </p>\n                        <p onClick={togglePagination}>\n                            {perPage} <img src={downArrow} alt=\"down arrow\" />\n                        </p>\n                        {pagination && (\n                            <div className=\"pagination-list\">\n                                <ul>\n                                    <li onClick={togglePerPage} value=\"5\">\n                                        5\n                                    </li>\n                                    <li onClick={togglePerPage} value=\"10\">\n                                        10\n                                    </li>\n                                    <li onClick={togglePerPage} value=\"15\">\n                                        15\n                                    </li>\n                                    <li onClick={togglePerPage} value=\"20\">\n                                        20\n                                    </li>\n                                </ul>\n                            </div>\n                        //     <select name=\"cars\" id=\"cars\">\n                        //     <option value=\"5\">5</option>\n                        //     <option value=\"10\">10</option>\n                        //     <option value=\"15\">15</option>\n                        //     <option value=\"20\">20</option>\n                        // </select>\n                        )}\n                    </div>\n                <div className=\"show-results\">\n                    {!showResults && (\n                        <p>\n                            {pageStart + 1}-{pageEnd} of {studentsData.length}\n                        </p>\n                    )}\n                    {showResults && (\n                        <p>\n                            Showing results: {pageStart + 1}-{pageEnd} of {studentsCopy.length}\n                        </p>\n                    )}\n                </div>\n                <img className=\"chevron-previous\" src={chevronLeft} alt=\"previous page\" onClick={previousPage} />\n                <img src={chevronRight} alt=\"next page\" onClick={nextPage} />\n            </div>\n            </div>\n        </div>\n    );\n};\n\nexport default Students;\n"]},"metadata":{},"sourceType":"module"}