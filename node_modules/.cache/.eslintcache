[{"/Users/sarahholland/Documents/Nology/Projects/client-project/_nsight/src/index.js":"1","/Users/sarahholland/Documents/Nology/Projects/client-project/_nsight/src/App.jsx":"2","/Users/sarahholland/Documents/Nology/Projects/client-project/_nsight/src/reportWebVitals.js":"3","/Users/sarahholland/Documents/Nology/Projects/client-project/_nsight/src/pages/students/students.jsx":"4","/Users/sarahholland/Documents/Nology/Projects/client-project/_nsight/src/assets/data/student-data.js":"5","/Users/sarahholland/Documents/Nology/Projects/client-project/_nsight/src/components/searchbox/searchbox.jsx":"6","/Users/sarahholland/Documents/Nology/Projects/client-project/_nsight/src/components/studentList/studentList.jsx":"7","/Users/sarahholland/Documents/Nology/Projects/client-project/_nsight/src/components/sort/sort.jsx":"8","/Users/sarahholland/Documents/Nology/Projects/client-project/_nsight/src/components/filter/filter.jsx":"9","/Users/sarahholland/Documents/Nology/Projects/client-project/_nsight/src/pages/settings/settings.jsx":"10","/Users/sarahholland/Documents/Nology/Projects/client-project/_nsight/src/pages/enrollment/enrollment.jsx":"11","/Users/sarahholland/Documents/Nology/Projects/client-project/_nsight/src/pages/courses/courses.jsx":"12","/Users/sarahholland/Documents/Nology/Projects/client-project/_nsight/src/components/navbar/navbar.jsx":"13","/Users/sarahholland/Documents/Nology/Projects/client-project/_nsight/src/pages/dummyPage/dummyPage.jsx":"14","/Users/sarahholland/Documents/Nology/Projects/client-project/_nsight/src/assets/data/coursedata.js":"15","/Users/sarahholland/Documents/Nology/Projects/client-project/_nsight/src/components/topheader/topheader.jsx":"16","/Users/sarahholland/Documents/Nology/Projects/client-project/_nsight/src/pages/courses/CourseList/CourseList.jsx":"17","/Users/sarahholland/Documents/Nology/Projects/client-project/_nsight/src/pages/courses/coursefilter/coursefilter.jsx":"18","/Users/sarahholland/Documents/Nology/Projects/client-project/_nsight/src/pages/courses/selfcourselist/selfcourselist.jsx":"19","/Users/sarahholland/Documents/Nology/Projects/client-project/_nsight/src/components/button/button.jsx":"20","/Users/sarahholland/Documents/Nology/Projects/client-project/_nsight/src/pages/studentDummyPage/studentDummyPage.jsx":"21","/Users/sarahholland/Documents/Nology/Projects/client-project/_nsight/src/assets/data/enrollment-data.js":"22","/Users/sarahholland/Documents/Nology/Projects/client-project/_nsight/src/components/enrollmentList/enrollmentList.jsx":"23"},{"size":504,"mtime":1632232454011,"results":"24","hashOfConfig":"25"},{"size":1639,"mtime":1634051092749,"results":"26","hashOfConfig":"25"},{"size":362,"mtime":1632232454011,"results":"27","hashOfConfig":"25"},{"size":10355,"mtime":1634053445651,"results":"28","hashOfConfig":"25"},{"size":9431,"mtime":1633361333559,"results":"29","hashOfConfig":"25"},{"size":420,"mtime":1633532918461,"results":"30","hashOfConfig":"25"},{"size":2586,"mtime":1634052083604,"results":"31","hashOfConfig":"25"},{"size":942,"mtime":1634051092752,"results":"32","hashOfConfig":"25"},{"size":1321,"mtime":1634051092750,"results":"33","hashOfConfig":"25"},{"size":166,"mtime":1632921601220,"results":"34","hashOfConfig":"25"},{"size":571,"mtime":1633612261951,"results":"35","hashOfConfig":"25"},{"size":3397,"mtime":1634121533262,"results":"36","hashOfConfig":"25"},{"size":5830,"mtime":1634045216014,"results":"37","hashOfConfig":"25"},{"size":621,"mtime":1633612261951,"results":"38","hashOfConfig":"25"},{"size":1430,"mtime":1633446743777,"results":"39","hashOfConfig":"25"},{"size":464,"mtime":1633446743778,"results":"40","hashOfConfig":"25"},{"size":1952,"mtime":1634121533262,"results":"41","hashOfConfig":"25"},{"size":2391,"mtime":1633612261950,"results":"42","hashOfConfig":"25"},{"size":1524,"mtime":1634121533263,"results":"43","hashOfConfig":"25"},{"size":873,"mtime":1633612261949,"results":"44","hashOfConfig":"25"},{"size":626,"mtime":1633612261951,"results":"45","hashOfConfig":"25"},{"size":6457,"mtime":1634045216013,"results":"46","hashOfConfig":"25"},{"size":5130,"mtime":1634045216014,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"15o5ab",{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"/Users/sarahholland/Documents/Nology/Projects/client-project/_nsight/src/index.js",[],["96","97"],"/Users/sarahholland/Documents/Nology/Projects/client-project/_nsight/src/App.jsx",[],"/Users/sarahholland/Documents/Nology/Projects/client-project/_nsight/src/reportWebVitals.js",[],"/Users/sarahholland/Documents/Nology/Projects/client-project/_nsight/src/pages/students/students.jsx",["98","99"],"import React, { useState, useEffect } from \"react\";\nimport \"./students.scss\";\nimport Searchbox from \"../../components/searchbox/searchbox\";\nimport Sort from \"../../components/sort/sort\";\nimport StudentList from \"../../components/studentList/studentList\";\nimport studentsData from \"../../assets/data/student-data\";\nimport Filter from \"../../components/filter/filter\";\nimport chevronLeft from \"../../assets/icons/chevron-left.svg\";\nimport chevronRight from \"../../assets/icons/chevron-right.svg\";\nimport downArrow from \"../../assets/icons/down-arrow.svg\";\nimport TopHeader from \"../../components/topheader/topheader\";\n\nconst Students = () => {\n    const [students, setStudents] = useState([]);\n    const [studentsCopy, setStudentsCopy] = useState([]);\n    const [pagination, setPagination] = useState(false);\n    const [perPage, setPerPage] = useState(10);\n    const [pageStart, setPageStart] = useState(0);\n    const [pageEnd, setPageEnd] = useState(perPage);\n    const [showResults, setShowResults] = useState(false);\n\n    // SEARCH by first and last name\n    const handleSearch = (e) => {\n        const sanitiseInput = e.target.value.toLowerCase();\n        const studentSearch = studentsData.filter((student) => {\n            const sanitisedStudentFirstName = student.first_name.toLowerCase();\n            const sanitisedStudentLastName = student.last_name.toLowerCase();\n            const sanitisedStudentName = `${sanitisedStudentFirstName} ${sanitisedStudentLastName}`;\n            return sanitisedStudentName.includes(sanitiseInput);\n        });\n        setStudentsCopy(studentSearch);\n        const toShow = studentSearch.slice(pageStart, pageEnd);\n        setStudents(toShow);\n\n        setShowResults(true);\n        if (e.target.value.length === 0) {\n            setShowResults(false);\n            const toShow = studentsData.slice(pageStart, pageEnd);\n            setStudents(toShow);\n            setStudentsCopy(studentsData);\n        }\n    };\n\n    // SORT by first and last name\n    const sortAscendingAZ = (a, b) => {\n        if (a.first_name < b.first_name) {\n            return -1;\n        } else if (a.first_name > b.first_name) {\n            return 1;\n        } else {\n            return 0;\n        }\n    };\n\n    const sortAscendingByFirstName = () => {\n        const studentsSortedByName = studentsCopy\n            .filter((student) => student)\n            .sort(sortAscendingAZ);\n        setStudentsCopy(studentsSortedByName);\n\n        const toShow = studentsSortedByName.slice(pageStart, pageEnd);\n        setStudents(toShow);\n    };\n\n    const sortDescendingAZ = (a, b) => {\n        if (b.first_name < a.first_name) {\n            return -1;\n        } else if (b.first_name > a.first_name) {\n            return 1;\n        } else {\n            return 0;\n        }\n    };\n\n    const sortDescendingByFirstName = () => {\n        const studentsSortedByName = studentsCopy\n            .filter((student) => student)\n            .sort(sortDescendingAZ);\n        setStudentsCopy(studentsSortedByName);\n\n        const toShow = studentsSortedByName.slice(pageStart, pageEnd);\n        setStudents(toShow);\n    };\n\n    // FILTER - Dynamic filter checkboxes\n    const unique = (value, index, self) => {\n        return self.indexOf(value) === index;\n    };\n\n    const courseNames = studentsData.map((student) => student.course_name);\n\n    const uniqueCourseNames = courseNames.filter(unique);\n\n    const createStatefulObject = (courseNames) => {\n        return courseNames.reduce((statefulObject, courseName) => {\n            statefulObject[courseName] = false;\n            return statefulObject;\n        }, {});\n    };\n\n    const [courses, setCourses] = useState(\n        createStatefulObject(uniqueCourseNames)\n    );\n\n    const handleSetCourses = (courseName) => {\n        const tempCourses = { ...courses };\n        tempCourses[courseName] = !tempCourses[courseName];\n\n        setCourses(tempCourses); // not synchronous\n        return tempCourses;\n    };\n\n    const filterByCourseName = (e) => {\n        const courses = handleSetCourses(e.target.value);\n        const stateArray = Object.keys(courses).filter((key) => courses[key]);\n\n        const filteredCourseName = studentsData.filter((student) =>\n            stateArray.includes(student.course_name)\n        );\n\n        if (filteredCourseName.length === 0) {\n            getStudents(studentsData);\n        } else {\n            setStudentsCopy(filteredCourseName);\n            const filtered = filteredCourseName.slice(pageStart, pageEnd);\n            setStudents(filtered);\n        }\n\n        const filteredStateArray = stateArray.filter((courseName) =>\n            courseName.includes(true)\n        );\n\n        if (filteredStateArray) {\n            setShowResults(true);\n        } else {\n            setShowResults(false);\n        }\n    };\n\n    // PAGINATION\n    const displayPage = (pageStart, pageEnd) => {\n        const toShow = studentsData.slice(pageStart, pageEnd);\n        setStudents(toShow);\n    };\n\n    const nextPage = () => {\n        const newPageStart = pageStart + perPage;\n        const newPageEnd = pageEnd + perPage;\n        if (newPageStart < studentsCopy.length) {\n            setPageStart(newPageStart);\n        }\n        if (newPageEnd > studentsCopy.length) {\n            setPageEnd(studentsCopy.length);\n        } else {\n            setPageEnd(newPageEnd);\n        }\n        if (newPageStart < studentsCopy.length) {\n            const toShow = studentsCopy.slice(newPageStart, newPageEnd);\n            setStudents(toShow);\n        }\n    };\n\n    const previousPage = () => {\n        const newPageStart = pageStart - perPage;\n        let newPageEnd = pageEnd - perPage;\n        if (newPageStart >= 0) {\n            setPageStart(newPageStart);\n        }\n        if (newPageEnd % perPage !== 0) {\n            setPageEnd(pageEnd - (newPageEnd % perPage));\n            newPageEnd = pageEnd - (newPageEnd % perPage);\n        } else {\n            if (newPageEnd > 0) {\n                setPageEnd(newPageEnd);\n            }\n        }\n        if (newPageStart >= 0) {\n            const toShow = studentsCopy.slice(newPageStart, newPageEnd);\n            setStudents(toShow);\n\n            if (pageEnd < perPage) {\n                const toShow = studentsCopy.slice(newPageStart, perPage);\n                setStudents(toShow);\n            } else {\n                const toShow = studentsCopy.slice(newPageStart, newPageEnd);\n                setStudents(toShow);\n            }\n        }\n    };\n\n    const togglePagination = () => {\n        setPagination(!pagination);\n    };\n\n    const togglePerPage = (e) => {\n        setPerPage(e.target.value);\n        setPageStart(0);\n        setPageEnd(e.target.value);\n        displayPage(0, e.target.value);\n        togglePagination();\n    };\n\n    const getStudents = () => {\n        const toShow = studentsData.slice(pageStart, pageEnd);\n        setStudentsCopy(studentsData);\n        setStudents(toShow);\n    };\n\n    useEffect(() => {\n        getStudents();\n    }, []);\n\n    let length = 0;\n    if (students.length > perPage) {\n        length = perPage;\n    } else {\n        length = students.length;\n    }\n\n    return (\n        <div className=\"main-student\">\n            <TopHeader title=\"Students\" />\n            <div className=\"container\">\n                <div className=\"student-heading\">\n                    <div>\n                        <h3>Student List</h3>\n                    </div>\n                    <div className=\"student-heading__subsets\">\n                        <Searchbox handleSearch={handleSearch} />\n                        <Sort\n                            sortAscendingByFirstName={sortAscendingByFirstName}\n                            sortDescendingByFirstName={sortDescendingByFirstName}\n                        />\n                        <Filter\n                            courses={courses}\n                            filterByCourseName={filterByCourseName}\n                        />\n                    </div>\n                </div>\n                <StudentList studentData={students} />\n                <div className=\"page-results\">\n                    <div className=\"pagination\">\n                        <p>Rows per page: </p>\n                        <p onClick={togglePagination}>\n                            {perPage} <img src={downArrow} alt=\"down arrow\" />\n                        </p>\n                        {pagination && (\n                            <div className=\"pagination-list\">\n                                <ul>\n                                    <li onClick={togglePerPage} value=\"5\">\n                                        5\n                                    </li>\n                                    <li onClick={togglePerPage} value=\"10\">\n                                        10\n                                    </li>\n                                    <li onClick={togglePerPage} value=\"15\">\n                                        15\n                                    </li>\n                                    <li onClick={togglePerPage} value=\"20\">\n                                        20\n                                    </li>\n                                </ul>\n                            </div>\n                        //     <select name=\"cars\" id=\"cars\">\n                        //     <option value=\"5\">5</option>\n                        //     <option value=\"10\">10</option>\n                        //     <option value=\"15\">15</option>\n                        //     <option value=\"20\">20</option>\n                        // </select>\n                        )}\n                    </div>\n                <div className=\"show-results\">\n                    {!showResults && (\n                        <p>\n                            {pageStart + 1}-{pageEnd} of {studentsData.length}\n                        </p>\n                    )}\n                    {showResults && (\n                        <p>\n                            Showing results: {pageStart + 1}-{pageEnd} of {studentsCopy.length}\n                        </p>\n                    )}\n                </div>\n                <img className=\"chevron-previous\" src={chevronLeft} alt=\"previous page\" onClick={previousPage} />\n                <img src={chevronRight} alt=\"next page\" onClick={nextPage} />\n            </div>\n            </div>\n        </div>\n    );\n};\n\nexport default Students;\n","/Users/sarahholland/Documents/Nology/Projects/client-project/_nsight/src/assets/data/student-data.js",[],"/Users/sarahholland/Documents/Nology/Projects/client-project/_nsight/src/components/searchbox/searchbox.jsx",[],"/Users/sarahholland/Documents/Nology/Projects/client-project/_nsight/src/components/studentList/studentList.jsx",[],"/Users/sarahholland/Documents/Nology/Projects/client-project/_nsight/src/components/sort/sort.jsx",[],"/Users/sarahholland/Documents/Nology/Projects/client-project/_nsight/src/components/filter/filter.jsx",[],"/Users/sarahholland/Documents/Nology/Projects/client-project/_nsight/src/pages/settings/settings.jsx",[],"/Users/sarahholland/Documents/Nology/Projects/client-project/_nsight/src/pages/enrollment/enrollment.jsx",[],"/Users/sarahholland/Documents/Nology/Projects/client-project/_nsight/src/pages/courses/courses.jsx",[],"/Users/sarahholland/Documents/Nology/Projects/client-project/_nsight/src/components/navbar/navbar.jsx",[],"/Users/sarahholland/Documents/Nology/Projects/client-project/_nsight/src/pages/dummyPage/dummyPage.jsx",[],"/Users/sarahholland/Documents/Nology/Projects/client-project/_nsight/src/assets/data/coursedata.js",[],"/Users/sarahholland/Documents/Nology/Projects/client-project/_nsight/src/components/topheader/topheader.jsx",[],"/Users/sarahholland/Documents/Nology/Projects/client-project/_nsight/src/pages/courses/CourseList/CourseList.jsx",[],"/Users/sarahholland/Documents/Nology/Projects/client-project/_nsight/src/pages/courses/coursefilter/coursefilter.jsx",[],"/Users/sarahholland/Documents/Nology/Projects/client-project/_nsight/src/pages/courses/selfcourselist/selfcourselist.jsx",[],"/Users/sarahholland/Documents/Nology/Projects/client-project/_nsight/src/components/button/button.jsx",[],"/Users/sarahholland/Documents/Nology/Projects/client-project/_nsight/src/pages/studentDummyPage/studentDummyPage.jsx",[],"/Users/sarahholland/Documents/Nology/Projects/client-project/_nsight/src/assets/data/enrollment-data.js",[],"/Users/sarahholland/Documents/Nology/Projects/client-project/_nsight/src/components/enrollmentList/enrollmentList.jsx",[],{"ruleId":"100","replacedBy":"101"},{"ruleId":"102","replacedBy":"103"},{"ruleId":"104","severity":1,"message":"105","line":211,"column":8,"nodeType":"106","endLine":211,"endColumn":10,"suggestions":"107"},{"ruleId":"108","severity":1,"message":"109","line":217,"column":9,"nodeType":"110","messageId":"111","endLine":217,"endColumn":15},"no-native-reassign",["112"],"no-negated-in-lhs",["113"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getStudents'. Either include it or remove the dependency array.","ArrayExpression",["114"],"no-unused-vars","'length' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation",{"desc":"115","fix":"116"},"Update the dependencies array to be: [getStudents]",{"range":"117","text":"118"},[6979,6981],"[getStudents]"]